/// vim: ft=groovy
apply plugin: 'java'
apply plugin: 'eclipse'
//apply plugin: 'org.ajoberstar.grgit-release'

repositories{ mavenCentral() }

dependencies {
  // compile 'com.google.code.gson:gson:2.2.4'
  compile 'org.ajoberstar:gradle-git:0.12.+'
  testCompile group: "junit", name: "junit", version: "4.+" //junit:junit:4.+"
  testRuntime group: "junit", name: "junit", version: "4.+" //junit:junit:4.+"
  runtime fileTree(dir: 'lib', include: '*.jar')
}

task hello {
  doLast {
    println 'Hello, this project to Weslley Gabanela with Java and Gradle!'
  }
}

/////
////// @See {https://github.com/ajoberstar/gradle-git/wiki/org.ajoberstar.grgit-release} import org.ajoberstar.grgit.*;
///
/// release {
///   grgit = Grgit.open( project.file('.') )
///   //remote = 'upstream' // default origin
///   prefixTagNameWithV = false // default True
///   //releaseTasks = ['build', 'publishGhPages', 'bintrayUpload'] // defaults to []
///   enforceSinceTags = true // default is false
///
///   version {
///     untaggedStages = ['alpha'] // default is ['dev']
///     taggedStages = ['beta'] // default is ['milestone', 'rc']
///     useBuildMetadataForStage = { true } // default is { stage -> stage != 'final' }
///     createBuildMetadata = { new Date().format('yyyy.MM.dd.hh.mm.ss') } // default is { grgit.head().abbreviatedId }
///   }
///
///   generateTagMessage = { version ->
///     StringBuilder msg = new StringBuilder()
///
///     msg.append('Release of ')
///     msg.append(version)
///     msg.append('\n\n')
///
///     grgit.log { range "v${version.nearest.normal.toString()}^{commit}", 'HEAD' }.inject(msg) { bldr, commit ->
///       bldr.append('- ')
///       bldr.append(commit.shortMessage)
///       bldr.append('\n')
///     }
///
///     msg.toString()
///   }
/// }
///
/// task tagRelease << {
///   println "Generating new release ${project.name}"
///
///   ext.repo = Grgit.open( project.file('.') )
///   version = "0.0.1-Alpha${repo.head().abbreviatedId}"
///
///   repo.tag.add {
///     name = version
///     message = "Release alpha #${version}"
///   }
/// }
/////
